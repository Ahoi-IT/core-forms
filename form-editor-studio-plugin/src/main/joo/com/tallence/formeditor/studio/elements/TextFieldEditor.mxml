<?xml version="1.0" encoding="UTF-8"?>
<local:AbstractFormElement xmlns:fx="http://ns.adobe.com/mxml/2009"
                           xmlns:local="com.tallence.formeditor.studio.elements.*"
                           xmlns:fields="exml:com.tallence.formeditor.studio.config"
                           formElementType="{FIELD_TYPE}"
                           formElementIconCls="tallence-icons tallence-icons--input-text"
                           formElementGroup="input">
  <fx:Script><![CDATA[
    public static const xtype:String = "com.tallence.formeditor.studio.elements.textFieldEditor";

    public static const FIELD_TYPE:String = "TextField";

    private var config:TextFieldEditor;

    [Bindable]
    public var defaultRegexpValidatorValue:String;
    [Bindable]
    public var defaultName:String;

    public native function TextFieldEditor(config:TextFieldEditor = null);
    ]]>
    </fx:Script>

  <local:items>
    <fields:TextField fieldLabel="{resourceManager.getString('com.tallence.formeditor.studio.bundles.FormEditor', 'FormEditor_element_name_label')}"
                      emptyText="{resourceManager.getString('com.tallence.formeditor.studio.bundles.FormEditor', 'FormEditor_element_name_emptyText')}"
                      formElementStructVE="{getFormElementStructVE()}"
                      propertyName="name"
                      defaultValue="{config.defaultName}"
                      bindTo="{config.bindTo}"
                      forceReadOnlyValueExpression="{config.forceReadOnlyValueExpression}"/>
    <fields:TextField fieldLabel="{resourceManager.getString('com.tallence.formeditor.studio.bundles.FormEditor', 'FormEditor_element_hint_label')}"
                      emptyText="{resourceManager.getString('com.tallence.formeditor.studio.bundles.FormEditor', 'FormEditor_element_hint_emptyText')}"
                      formElementStructVE="{getFormElementStructVE()}"
                      propertyName="hint"
                      bindTo="{config.bindTo}"
                      forceReadOnlyValueExpression="{config.forceReadOnlyValueExpression}"/>
    <fields:CheckboxField fieldLabel="{resourceManager.getString('com.tallence.formeditor.studio.bundles.FormEditor', 'FormEditor_element_mandatory_label')}"
                          formElementStructVE="{getFormElementStructVE()}"
                          propertyName="validator.mandatory"
                          defaultValue="false"
                          bindTo="{config.bindTo}"
                          forceReadOnlyValueExpression="{config.forceReadOnlyValueExpression}"/>
    <fields:NumberField fieldLabel="Max. Zeichen"
                        emptyText="Bitte maximale Zeichenanzahl eingeben."
                        formElementStructVE="{getFormElementStructVE()}"
                        propertyName="validator.maxSize"
                        defaultValue="255"
                        bindTo="{config.bindTo}"
                        forceReadOnlyValueExpression="{config.forceReadOnlyValueExpression}"/>
    <fields:NumberField fieldLabel="Min. Zeichen"
                        emptyText="Bitte minimale Zeichenanzahl eingeben."
                        formElementStructVE="{getFormElementStructVE()}"
                        propertyName="validator.minSize"
                        defaultValue="0"
                        bindTo="{config.bindTo}"
                        forceReadOnlyValueExpression="{config.forceReadOnlyValueExpression}"/>
    <fields:TextField fieldLabel="{resourceManager.getString('com.tallence.formeditor.studio.bundles.FormEditor', 'FormEditor_element_regexp_label')}"
                      emptyText="{resourceManager.getString('com.tallence.formeditor.studio.bundles.FormEditor', 'FormEditor_element_regexp_emptyText')}"
                      formElementStructVE="{getFormElementStructVE()}"
                      propertyName="regexpValidator"
                      bindTo="{config.bindTo}"
                      defaultValue="{config.defaultRegexpValidatorValue}"
                      forceReadOnlyValueExpression="{config.forceReadOnlyValueExpression}"/>
  </local:items>
</local:AbstractFormElement>